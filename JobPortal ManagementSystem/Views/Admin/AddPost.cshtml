@model JobPortalManagementSystem.Models.JobPost

@{
    ViewBag.Title = "AddPost";

    Layout = "~/Views/Admin/AdminLayoutpage.cshtml";


}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddJobPost</title>
    <style>
        
        .form-control{
            width:500px;
        }
        /* Optional: If you want to add some space around the form */
        .form-container {
            

        
            max-width: 600px;
            margin: 40px auto;
            padding: 50px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h4{
            text-align:center;
        }
        .control-label{
            font-weight:bold;
            padding-bottom:10px;
        }
    </style>


</head>
<body>
    <div class="form-container">
       

            @using (Html.BeginForm("AddPost", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

           
                <h4>Job post</h4>
                
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.title,"Title", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", onfocusout = "validateTitle()" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger", @id = "titleValidationMessage" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.companyName,"Company", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.companyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.companyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.location,"Location", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.minSalary,"Minimumsalary", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.minSalary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.minSalary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maxSalary, "Maximumsalary", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.maxSalary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.maxSalary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.postDate,"Postdate", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.postDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.postDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.endDate,"Enddate", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, "Description",htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.jobCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.jobCategory, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.jobCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.jobNature, "Nature",htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.jobNature, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.jobNature, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.categoryId,"Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.DropDownListFor(m => m.categoryId, ViewBag.Categories as SelectList, "Select a Category", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    @Html.Label("Image","Image", htmlAttributes: new { @class = "control-label col-md-2" })
                    <input type="file" name="imageFile" id="imageFile" class="form-control" />
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add post" class="btn btn-primary" />
                    </div>
                </div>
           
            }

        </div>

 

    <script>
    // Function to show validation message in the <span> element
    function showValidationMessage(inputId, message) {
        const validationSpan = document.getElementById(inputId + 'ValidationMessage');
        validationSpan.textContent = message;
    }

    // Validation function for the title field
    function validateTitle() {
        const titleField = document.getElementById('title').value.trim();
        if (titleField.length < 3) {
            showValidationMessage('title', 'Title must contain at least 3 characters.');
        } else {
            showValidationMessage('title', ''); // Clear the validation message if valid
        }
    }

    </script>

</body>
</html>