@model JobPortal_ManagementSystem.Models.ScheduledInterview

@{
    Layout = "~/Views/Admin/AdminLayoutpage.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ScheduleInterview</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .center-box {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }
        .bordered-box {
           
            border: 2px solid #ccc;
            border-radius: 10px;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            
        }
        h4{
            text-align:center;
        }
        body{
            padding-top:70px;
        }
        .control-label{
            font-weight:bold;
        }
           
    </style>
</head>
<body>
    <div class="center-box">
        <div class="bordered-box container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Schedule interview</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
            @Html.LabelFor(model => model.ApplicationId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.ApplicationId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobPostId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.JobPostId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobPostId, "", new { @class = "text-danger" })
            </div>
        </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-4 p-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.companyName, htmlAttributes: new { @class = "control-label col-md-4 p-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.companyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.companyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-4 p-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control", type = "date",placeholder="Enter interview scheduled date", @id = "interviewDate", @onchange = "disablePreviousDates()" } })
                        @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger", @id = "interviewDateValidationMessage" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-6 p-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" ,placeholder="Enter interview location", @id = "location", @onfocusout = "validateLocation()" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger", @id = "locationValidationMessage" })
                    </div>
                </div>


                <div class="form-group">
                    <div class=" text-center mt-3">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
            }
           
        </div>
    </div>

    <script src="~/Content/Javascript/InterviewSchedule.js"></script>
</body>
</html>





