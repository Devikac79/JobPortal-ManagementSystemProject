@model JobPortalManagementSystem.Models.Signup

@{
    ViewBag.Title = "UserProfileDetails";
    Layout = "~/Views/User/UserLayoutpage.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width">
    <title>User Profile Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
          rel="stylesheet" />
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
          rel="stylesheet" />
    <style>
        body {
            background-color: #f5f5f5;
            font-family: Arial, sans-serif;
        }

        .profile-box {
            max-width: 500px;
            padding: 30px;
            border: 2px solid #ddd;
            border-radius: 5px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin: 30px auto;
            text-align: "center";
            padding-left: 120px;
        }

        .profile-image {
            width: 150px;
            height: 150px;
            object-fit: cover;
            border-radius: 50%;
            margin-bottom: 10px;
            text-align: "center";
        }


        .username-heading {
            font-size: 24px;
            color: #007BFF;
            margin-bottom: 10px;
        }

        .dt-container {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .dt-label {
            font-weight: bold;
            width: 120px;
            color: #333;
        }

        .dd-value {
            flex: 1;
            margin-left: 10px;
            color: #555;
        }


        .btn-container {
            text-align: center;
            margin-top: 30px;
            padding-right: 30px;
        }

        .btn-primary, .btn-secondary {
            background-color: #007BFF;
            border-color: #007BFF;
        }

            .btn-primary:hover, .btn-secondary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }

        .profile {
            padding-right: 40px;
        }

        .gradient-custom-2 {
            /* fallback for old browsers */
            background: #fbc2eb;
            /* Chrome 10-25, Safari 5.1-6 */
            background: -webkit-linear-gradient(to right, rgba(251, 194, 235, 1), rgba(166, 193, 238, 1));
            /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
            background: linear-gradient(to right, rgba(251, 194, 235, 1), rgba(166, 193, 238, 1))
        }


        body {
            padding-top: 100px;
        }
    </style>
</head>
<body class="">
    <div class="container ">
        <div class="row justify-content-center">
            <div class="col-md-8 profile-box  gradient-custom-2">
                <div class="text-center profile">
                    @if (Model.image != null && Model.image.Length > 0)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(Model.image)" alt="User Profile Image" class="profile-image img-thumbnail" />
                    }
                </div>
                <div class="text-center">
                    <div class="username-heading">
                        @Html.DisplayFor(model => model.firstName) @Html.DisplayFor(model => model.lastName)
                    </div>
                </div>
                <hr />

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.dateOfBirth)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.dateOfBirth)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.gender)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.gender)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.email)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.email)</span>
                </div>


                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.dateOfBirth)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.dateOfBirth)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.gender)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.gender)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.email)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.email)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.phone)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.phone)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.address)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.address)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.city)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.city)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.state)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.state)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.pincode)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.pincode)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.country)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.country)</span>
                </div>

                <div class="dt-container">
                    <span class="dt-label">@Html.DisplayNameFor(model => model.username)</span>
                    <span class="dd-value">@Html.DisplayFor(model => model.username)</span>
                </div>


                @if (Model.resume != null && Model.resume.Length > 0)
                {
                    <div class="dt-container">
                        <span class="dt-label">@Html.DisplayNameFor(model => model.resume)</span>
                        <span class="dd-value"><a href="data:resume/pdf;base64,@Convert.ToBase64String(Model.resume)" download="resume.pdf">Download Resume</a>
                    </div>
                }




                <div class="btn-container">
                    @Html.ActionLink("Edit", "EditUserProfile", new { id = Model.Id }, new { @class = "btn btn-primary" })

                </div>
            </div>
        </div>
    </div>



</body>
</html>
