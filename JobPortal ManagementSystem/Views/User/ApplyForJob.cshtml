@model JobPortal_ManagementSystem.Models.JobApplication

@{
    ViewBag.Title = "ApplyForJob";
    Layout = "~/Views/User/UserLayoutpage.cshtml";
}
<style>
    h4 {
        text-align: center;
        color: deepskyblue;
        padding-top: 20px;
    }
</style>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            @using (Html.BeginForm("ApplyForJob", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Apply For Job</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.AlreadyAppliedMessage != null)
                {
                    <div class="alert alert-info">@ViewBag.AlreadyAppliedMessage</div>
                }
               
                else if (!Model.IsApplied)
                {
                    <!-- Form fields -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>

                    <!-- Email -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <!-- userId -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
                    </div>

                    <!-- jobPostId -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.jobPostId, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.jobPostId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.jobPostId, "", new { @class = "text-danger" })
                    </div>

                    <!-- applicationDate -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.applicationDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.applicationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.applicationDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.companyName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.companyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.companyName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.skills, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.skills, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.skills, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Resume")
                        <input type="file" name="resumeFile" id="resumeFile" class="form-control" />
                    </div>
                    <div class="form-group">
                        <div class="text-center mt-3">
                            <input type="submit" value="Apply" class="btn btn-primary" />
                        </div>
                    </div>
                }
                }

            </div>
            }
        </div>
    </div>
</div>